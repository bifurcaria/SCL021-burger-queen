{"version":3,"sources":["components/Categories.js","components/Navbar.js","components/Display.js","lib/firebaseconfig.js","lib/firebase.js","components/Order.js","Waiter.js","components/Login.js","Hello.js","components/timeFormat.js","components/OrderList.js","Cook.js","WaiterOrders.js","index.jsx"],"names":["Categories","_ref","menu","filterMenu","react_default","a","createElement","className","style","padding","map","element","Button","type","key","onClick","Navbar","Menu","as","borderless","fixed","Item","href","color","Display","category","add","items","find","name","textAlign","width","display","flexWrap","justifyContent","alignItems","length","id","img","desc","price","Card","Image","src","alt","wrapped","ui","Content","Header","Meta","Description","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","db","getFirestore","provider","GoogleAuthProvider","signGoogle","signInWithPopup","auth","credential","credentialFromResult","alert","errorCode","code","placeOrder","asyncToGenerator","_callee","newOrder","customer","user","docRef","_context","currentUser","addDoc","collection","waiterName","customerName","uid","order","date","Timestamp","fromDate","Date","completed","delivered","console","log","_x","_x2","apply","arguments","getOrders","_ref2","_callee2","orders","querySnapShot","allOrders","_context2","query","getDocs","doc","data","objectSpread","_x3","getAuth","onAuthStateChanged","updateOrder","_ref3","_callee3","ref","_context3","updateDoc","serverTimestamp","_x4","_x5","Order","command","erase","nameCallback","nameState","Input","placeholder","onChange","e","target","Group","relaxed","verticalAlign","floated","Waiter","names","_useState","useState","_useState2","slicedToArray","activeCategory","setActiveCategory","_useState3","_useState4","currentOrder","setCurrentOrder","_useState5","_useState6","setCustomerName","_useState7","_useState8","visible","setVisible","useEffect","Container","marginTop","components_Navbar","Grid","columns","Column","Sidebar","Pushable","Segment","icon","components_Order","item","filter","thisItem","_useState9","_useState10","count","setCount","prices","Number","reduce","b","totalSum","Pusher","basic","components_Categories","components_Display","concat","toConsumableArray","Login","Hello","components_Login","timeFormat","docToDate","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","OrderList","plates","setAs","condition","now","getTime","List","avatar","Cook","setOrders","setFilter","sort","seconds","components_OrderList","WaiterOrders","router","createBrowserRouter","path","src_Hello","src_Waiter","src_WaiterOrders","src_Cook","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_router_dist"],"mappings":"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","file":"static/js/main.0aad7c72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button } from 'semantic-ui-react';\r\n//useeffect o algo q me permita devolver el valor al menos hacia app, para que sepa cuales mostrar con display\r\nconst Categories = ({ menu, filterMenu }) => {\r\n\r\n  return (\r\n    <div className=\"Categories\" style={{padding: '25px'}}>\r\n      {menu.map((element) => {\r\n        return (\r\n          <Button\r\n            type=\"button\"\r\n            /* className={`${\r\n              activeCategory === {name} ? \"btn active\" : \"btn\"\r\n            }`}\r\n            */\r\n            key={element}\r\n            onClick={() => filterMenu(element)}\r\n          >\r\n            {element}\r\n          </Button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categories\r\n","import React from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n      <Menu\r\n      as='header'\r\n      borderless\r\n      fixed='top'\r\n\r\n      >\r\n        <Menu.Item\r\n          as='a' href='/' style={{color:'white !important'}}\r\n        >\r\n          Inicio\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as='a' href='/cook'\r\n        >\r\n          Pedidos\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as='a' href='/'\r\n        >\r\n          Salir\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Card, Image } from 'semantic-ui-react';\r\n// desestructuracion, en vez de parentesis iba props, pero se puede desestructurar y sacar solo list\r\n//por esto puedo usar adentro como variable\r\n//props puede ser datos y tb funcion ojo\r\nconst Display = ({ menu, category, add }) => {\r\n\r\n  const { items } = menu.find(element => element.name === category)\r\n  return (\r\n    <div style={{textAlign: '-webkit-center',padding: '25px', width:'80%', display:'flex', flexWrap:'wrap', justifyContent: 'center', alignItems: 'center'}}>\r\n      {items.length > 0 && items.map(element => {\r\n        const { id, name, img, desc, price } = element;\r\n        return (\r\n          <Card key={id}>\r\n          <Image src={img} alt={name} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>{name}</Card.Header>\r\n            <Card.Meta>\r\n              <span className='date'>${price}</span>\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              {desc}\r\n            </Card.Description>\r\n            <Button\r\n                type='button'\r\n                key='id'\r\n                onClick={() => add(element)}\r\n              >\r\n                Agregar\r\n              </Button>\r\n              </Card.Content>\r\n        </Card>\r\n)\r\n              \r\n           \r\n\r\n      }\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n\r\n\r\n\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n//import { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBOqFWB0RcsxSfEhhdtiRdr4en6LvZA3oo\",\r\n  authDomain: \"burg3rqu33n.firebaseapp.com\",\r\n  projectId: \"burg3rqu33n\",\r\n  storageBucket: \"burg3rqu33n.appspot.com\",\r\n  messagingSenderId: \"17533634652\",\r\n  appId: \"1:17533634652:web:eeb1d53fef6ae8ba7a3e99\",\r\n  measurementId: \"G-CGR9M98HWJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n\r\nexport default app;","import app from \"./firebaseconfig\";\r\n//import {getDatabase, ref, runTransaction } from 'firebase/database'\r\nimport { getFirestore, collection, getDocs, addDoc, Timestamp, query, doc, updateDoc, serverTimestamp} from 'firebase/firestore'\r\nimport { getAuth,  GoogleAuthProvider, signInWithPopup, onAuthStateChanged} from 'firebase/auth'\r\n\r\nconst db = getFirestore(app);\r\n// -----------Firebase Login\r\n\r\nconst provider = new GoogleAuthProvider();\r\n//const getUserData = () => auth.currentUser;\r\n\r\nconst signGoogle = () => {\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        alert('hola :-)');\r\n        // const token = credential.accessToken;\r\n        // The signed-in user info.\r\n        // const user = result.user;\r\n        // ...\r\n\r\n        return credential;\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        alert('No fue posible ingresar con Google');\r\n        // const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        // const email = error.customData.email;\r\n        // The AuthCredential type that was used.\r\n        // const credential = GoogleAuthProvider.credentialFromError(error);\r\n        // ...\r\n        return errorCode;\r\n      });\r\n  };\r\n\r\n\r\nconst placeOrder = async (newOrder, customer) => {\r\n    const user = auth.currentUser;\r\n    if (user !== null) {\r\n        const docRef = await addDoc(collection(db, 'orders'), {\r\n            waiterName: user.displayName,\r\n            customerName: customer,\r\n            uid: user.uid,\r\n            order: newOrder,\r\n            date: Timestamp.fromDate(new Date()),\r\n            completed: Timestamp.fromDate(new Date()),\r\n            delivered: Timestamp.fromDate(new Date()),\r\n            state: \"active\"\r\n        }\r\n        );\r\n        console.log('Document written with ID: ', docRef.id)\r\n        // location.reload();\r\n        return\r\n    }\r\n}\r\n\r\n\r\n\r\nconst getOrders = async (state) => {\r\n\r\n  const orders = query(collection(db, 'orders'));\r\n  const querySnapShot = await getDocs(orders);\r\n  const allOrders = [];\r\n  querySnapShot.forEach((doc) => {\r\n    if (doc.data().state === state) {\r\n      allOrders.push({ ...doc.data(), id: doc.id });\r\n    }\r\n  });\r\n  return allOrders;\r\n /* onSnapshot(doc(db, '/orders/CK5xivFv1tegRH52U1GB'), (doc) => {\r\n    console.log(doc.data())\r\n  }) */\r\n\r\n  \r\n}\r\n\r\n\r\nconst auth = getAuth();\r\nonAuthStateChanged(auth, (user) => {\r\n  if (user) {\r\n    // User is signed in, see docs for a list of available properties\r\n    // https://firebase.google.com/docs/reference/js/firebase.User\r\n    const uid = user.uid;\r\n    return uid\r\n  } else {\r\n    return false\r\n  }\r\n});\r\n\r\nconst updateOrder = async (id, state) => {\r\n   \r\n    const ref = doc(db, 'orders', id);\r\n\r\n        await updateDoc(ref, {\r\n            state: state,\r\n            [state] : serverTimestamp()\r\n        });\r\n        console.log('Document re-written')\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    db,\r\n    signGoogle,\r\n    placeOrder,\r\n    getOrders,\r\n    updateOrder,\r\n    auth\r\n}","import React from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Item, Input } from 'semantic-ui-react';\r\nimport { placeOrder } from \"../lib/firebase\";\r\n\r\nconst Order = ({ command, erase, price, nameCallback, nameState }) => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Input \r\n            placeholder='Nombre clientx'\r\n            onChange={e => nameCallback(e.target.value)} />\r\n            <Item.Group relaxed>\r\n                {command.map((element) => {\r\n                    const { id, name, price } = element\r\n                    return (\r\n                        <Item key={id}>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header style={{width:'auto'}}>{name}</Item.Header>\r\n                                <Button\r\n                                floated='right'\r\n                                onClick={() => erase(element)}>X</Button>\r\n                                <Item.Description>${price}</Item.Description>\r\n                                \r\n                            </Item.Content>\r\n                        </Item>\r\n                    )\r\n                }\r\n                )}\r\n            </Item.Group>\r\n\r\n            <h4> Total: ${price} </h4>\r\n\r\n\r\n            <Button\r\n                onClick={() => placeOrder(command, nameState )}\r\n            >Enviar a cocina</Button>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Order","import './App.css';\r\nimport React, { useState, useEffect} from 'react';\r\nimport Categories from './components/Categories';\r\nimport Navbar from './components/Navbar'\r\nimport Display from './components/Display';\r\nimport Order from './components/Order';\r\nimport data from './components/menu.json';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Grid, Segment,Sidebar,Header, Container } from 'semantic-ui-react';\r\n\r\n//aquí llamo a todos los componentes\r\nfunction Waiter() {\r\n\r\n\r\n  const names = data.map((element) => { return element.name })\r\n\r\n  const [activeCategory, setActiveCategory] = useState(\"Postres y dulces\");\r\n  const [currentOrder, setCurrentOrder] = useState([])\r\n  const [customerName, setCustomerName] = useState(\"\")\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const filterMenu = (category) => {\r\n      setActiveCategory(category);\r\n      return;\r\n  }\r\n\r\n  const takeOrder = (item) => {\r\n      setCurrentOrder([\r\n          item,\r\n          ...currentOrder\r\n      ]);\r\n      return\r\n  }\r\n\r\n  const deleteFromOrder = (item) => {\r\n      setCurrentOrder(\r\n          currentOrder.filter((thisItem) => (thisItem) !== item)\r\n      );\r\n      return\r\n  }\r\n\r\n  function totalSum() {\r\n      const [count, setCount] = useState(0);\r\n      useEffect(() => {\r\n          let prices = (currentOrder.map((item) => (Number(item.price))))\r\n          setCount(prices.reduce((a, b) => a + b, 0))\r\n      }, [currentOrder]);\r\n\r\n      return count;\r\n  }\r\n\r\n  function visibility() {\r\n      useEffect(() => {\r\n          if (currentOrder.length !== 0) {\r\n              setVisible(true)\r\n          }\r\n          else setVisible(false)\r\n      }, [currentOrder]);\r\n\r\n      return visible;\r\n  }\r\n\r\n  visibility()\r\n\r\n  return (\r\n    <Container style={{marginTop: '50px', width: '-webkit-fill-available'}}>\r\n    <Navbar/>\r\n      <Grid columns={1}>\r\n        \r\n          <Grid.Column>\r\n              <Sidebar.Pushable as={Segment}>\r\n                  <Sidebar\r\n                      className='ui.basic.segment'\r\n                      icon='labeled'\r\n                      visible={visible}\r\n                      width='wide'\r\n                  >\r\n                      <Order\r\n                          command={currentOrder}\r\n                          erase={deleteFromOrder}\r\n                          price={totalSum()}\r\n                          nameCallback={setCustomerName}\r\n                          nameState={customerName}\r\n                      />\r\n\r\n                  </Sidebar>\r\n\r\n                  <Sidebar.Pusher>\r\n                      <Segment basic>\r\n                          <Header as='h3'>Menú</Header>\r\n\r\n                          <Categories\r\n                              menu={names}\r\n                              filterMenu={filterMenu}\r\n                          />\r\n\r\n                          <Display\r\n                              menu={data}\r\n                              category={activeCategory}\r\n                              add={takeOrder}\r\n                          />\r\n\r\n                      </Segment>\r\n                  </Sidebar.Pusher>\r\n              </Sidebar.Pushable>\r\n          </Grid.Column>\r\n      </Grid>\r\n      </Container>\r\n  )\r\n}\r\n\r\nexport default Waiter;\r\n","\r\nimport { signGoogle } from '../lib/firebase.js';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button } from 'semantic-ui-react';\r\nimport React from 'react';\r\nimport { Container } from 'semantic-ui-react'\r\n\r\n//rendereado condicional, si estas logueado te muestra botones de waiter o cook\r\n//si no estas logueado sign in\r\n//Agegar sombrita\r\n\r\nconst Login = () => {\r\n\r\n    return (\r\n        <Container>\r\n        <Button\r\n        onClick={signGoogle}>\r\n        entrar\r\n        </Button>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Login from './components/Login';\r\nimport React from 'react'\r\nimport { auth } from './lib/firebase'\r\nimport Navbar from './components/Navbar'\r\nimport {Button,Container} from 'semantic-ui-react'\r\nfunction Hello() {\r\n    if (auth === false) {\r\n        return (\r\n            <Login />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n       <Navbar/>\r\n       <Container\r\n       style={{marginTop: '100px'}}>\r\n        <Button as='a' href='/waiter' >\r\n        Garzones</Button>\r\n        <Button as='a' href='/cook'>Cocina</Button>\r\n        </Container>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Hello","\r\nfunction timeFormat(date) {\r\n    const docToDate = new Date(date * 1000);\r\n    const day = docToDate.getDate();\r\n    const month = docToDate.getMonth() + 1;\r\n    const year = docToDate.getFullYear();\r\n    const hour = docToDate.getHours();\r\n    const minute = docToDate.getMinutes();\r\n    return `${day}.${month}.${year} a las ${hour}:${minute}`;\r\n}\r\n\r\nexport default timeFormat\r\n\r\n","import React from \"react\";\r\nimport { List, Button, Image } from \"semantic-ui-react\";\r\nimport { updateOrder } from \"../lib/firebase\"\r\nimport timeFormat from \"./timeFormat\";\r\n\r\nfunction OrderList({ waiterName, id, customerName, plates, setAs, date, filter, delivered, completed, condition }) {\r\n\r\n    let now = new Date()\r\n    now = now.getTime() / 1000\r\n    //const [currentDate, setCurrentDate] = useState(now)\r\n\r\n    //volver a ver esto más rato y usar state en vez de filter para evitar renderear mal botones o fechas\r\n    const buttons = () => {\r\n        return (<Button onClick={() =>\r\n            updateOrder(id, setAs)\r\n        }\r\n        >{setAs}</Button>)\r\n    }\r\n\r\n\r\n    const lastDate = () => {\r\n        if (filter === 'delivered') { return (<div>entregado el {timeFormat(delivered)}</div>) }\r\n        else if (filter === 'completed') { return (<div>completado el {timeFormat(completed)}</div>) }\r\n        return (<div>hace {(now - date) / 3600} horas</div>)\r\n    }\r\n\r\n    return (\r\n        <List.Item key={id+'_box'}>\r\n            <List.Content key={id+'_buttons'} floated='right'>\r\n                {condition ? buttons() : lastDate(setAs)}\r\n            </List.Content>\r\n            <Image avatar src='https://react.semantic-ui.com/images/avatar/small/rachel.png' />\r\n            <List.Content key={id+'_header'}>\r\n                <List.Header key={id+'_customer'} >{customerName}</List.Header>\r\n                <List.Description key={id+'_waiter'} >\r\n                    Orden tomada por{' '}\r\n                    <b>{waiterName}</b>{' '}\r\n                    el {timeFormat(date)}.\r\n                </List.Description>\r\n                <List.Description key={id+'_plates'}>\r\n                    <List>{plates.map((element) => <List.Content>{element.name}</List.Content>)}</List>\r\n                </List.Description>\r\n            </List.Content>\r\n        </List.Item>)\r\n}\r\n\r\nexport default OrderList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, List, Button} from 'semantic-ui-react'\r\nimport { getOrders } from './lib/firebase'\r\nimport OrderList from './components/OrderList'\r\n\r\nfunction Cook() {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [filter, setFilter] = useState('active')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const setAllOrders = () => {\r\n            getOrders(filter)\r\n                .then((value) => {\r\n                    value.sort((a, b) => {\r\n                        // para ordenar valores numericos (criteria corresponde al parametro que se va a filtrar)\r\n                        return Number(a.date.seconds) - Number(b.date.seconds);\r\n                    }\r\n                    );\r\n                    setOrders(value)\r\n                }\r\n                )\r\n        }\r\n        setAllOrders()\r\n    }, [filter]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Button.Group>\r\n                <Button onClick={() => setFilter('active')}>Pedidos activos</Button>\r\n                <Button onClick={() => setFilter('completed')}>Listos para servir</Button>\r\n                <Button onClick={() => setFilter('delivered')}>Pedidos cerrados</Button>\r\n            </Button.Group>\r\n\r\n            <List>\r\n                {orders.length > 0 && orders.map(element => {\r\n                    const { waiterName, customerName, id, date, order, state, delivered, completed } = element;\r\n                    return <OrderList\r\n                        waiterName={waiterName}\r\n                        id={id}\r\n                        customerName={customerName}\r\n                        state={state}\r\n                        plates={order}\r\n                        setAs='completed'\r\n                        date={date.seconds}\r\n                        delivered={delivered.seconds}\r\n                        completed={completed.seconds}\r\n                        filter={filter}\r\n                        condition={filter === 'active'}\r\n                    />\r\n                })}\r\n            </List>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Cook","import React, { useState, useEffect } from 'react'\r\nimport Navbar from './components/Navbar'\r\nimport { Container, List, Button} from 'semantic-ui-react'\r\nimport { getOrders } from './lib/firebase'\r\nimport OrderList from './components/OrderList'\r\n\r\nfunction WaiterOrders () {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [filter, setFilter] = useState('active')\r\n\r\n    useEffect(() => {\r\n        const setAllOrders = () => {\r\n            getOrders(filter)\r\n                .then((value) => {\r\n                    value.sort((a, b) => {\r\n                        // para ordenar valores numericos (criteria corresponde al parametro que se va a filtrar)\r\n                        return Number(a.date.seconds) - Number(b.date.seconds);\r\n                    }\r\n                    );\r\n                    setOrders(value)\r\n                }\r\n                )\r\n        }\r\n        setAllOrders()\r\n    }, [filter]);\r\n\r\n\r\n    return (\r\n        <Container style={{marginTop: '50px', width: '-webkit-fill-available'}}>\r\n            <Navbar/>\r\n            <Button.Group>\r\n                <Button onClick={() => setFilter('active')}>Pedidos activos</Button>\r\n                <Button onClick={() => setFilter('completed')}>Listos para servir</Button>\r\n                <Button onClick={() => setFilter('delivered')}>Pedidos cerrados</Button>\r\n            </Button.Group>\r\n\r\n            <List>\r\n                {orders.length > 0 && orders.map(element => {\r\n                    const { waiterName, customerName, id, date, order, state, delivered, completed } = element;\r\n                    return <OrderList\r\n                        waiterName={waiterName}\r\n                        id={id}\r\n                        customerName={customerName}\r\n                        state={state}\r\n                        plates={order}\r\n                        setAs='delivered'\r\n                        date={date.seconds}\r\n                        delivered={delivered.seconds}\r\n                        completed={completed.seconds}\r\n                        filter={filter}\r\n                        condition={filter === 'completed'}\r\n                    />\r\n                })}\r\n            </List>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default WaiterOrders","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport Waiter from './Waiter'\r\nimport Hello from './Hello'\r\nimport Cook from './Cook'\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\nimport WaiterOrders from './WaiterOrders';\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <Hello />,\r\n  },\r\n  {\r\n    path: \"waiter\",\r\n    element: <Waiter />,\r\n  },\r\n  {\r\n    path: \"orders\",\r\n    element: <WaiterOrders />,\r\n  },\r\n  {\r\n    path: \"cook\",\r\n    element: <Cook />,\r\n  },\r\n]);\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  <React.StrictMode>\r\n    <RouterProvider router={router} />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}